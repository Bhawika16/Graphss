class Solution {
public:
    bool dfs(int start,vector<vector<int>>& graph, vector<int>&color, int parent){
        color[start]=1-parent;
        for(auto x : graph[start]){
            if(color[x]!=-1){
                if(color[x]==color[start]) return false;
            }
            else if(!dfs(x,graph,color,color[start])) return false;
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> color(n,-1);
        for(int i=0;i<n;i++){
            if(color[i]==-1){
                if(!dfs(i,graph,color,1)) return false;
            }
        }
        return true;
    }
};
